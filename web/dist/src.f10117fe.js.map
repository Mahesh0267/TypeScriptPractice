{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;ADKtB,ECLwB,IAAI,EAAE,IDK9B,CCLsB;EAAe,ADOnC,GCPsC,EAAE,IDOxC,IAAA,CAAoB,IAApB,EAAmC;ACPf,CAAT,CAAb,EDOsB,KAAA,IAAA,GAAA,IAAA;ACLtB,IAAI,ADIF,CCJG,EAAL,CAAQ,CDIN,MAAA,CCJF,EAAkB,ADIwB,EAAxC,UCJgB;EAChB,ADIuC,OCJhC,CAAC,GAAR,CAAY,UAAZ;AACD,CAFD;AAGA,EDIE,ECJE,CAAC,CDIH,CCJF,ADIE,CCJM,QAAR,ADIE,CAAA,CCJgB,EDIhB,GAAA,OCJgB,GDIZ,QAAJ,EAAoB;ECHpB,EDIE,KCJK,CAAC,CDIC,ECJT,CAAY,EDIE,IAAL,CAAU,ICJnB,IDIS,CAAP;ACHH,CAFD,CDMG,CAFD;ACDF,IAAI,CAAC,EAAL,CAAQ,MAAR,EAAgB,YAAA;EACd,ADIA,IAAA,CAAA,ECJO,CAAC,GAAR,CAAY,EDIZ,CAAA,GCJA,ADIA,GAAA,UAAI,MAAJ,EAAqB;ACHtB,CAFD,GDMI,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;ACFJ,EDGG,CAFD,CCDE,CAAC,OAAL,CAAa,QAAb;;EDKE,IAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,SAAH,EAAsB,QAAtB,EAAwC;IACtC;IACA,IAAM,OAAO,GAAG,KAAK,MAAL,CAAY,SAAZ,KAA0B,EAA1C;IACA,OAAO,CAAC,IAAR,CAAa,QAAb;IACA,KAAK,MAAL,CAAY,SAAZ,IAAyB,OAAzB;EACD,CALD;;EAOA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,SAAR,EAAyB;IACvB,IAAM,OAAO,GAAG,KAAK,MAAL,CAAY,SAAZ,CAAhB;;IACA,IAAI,CAAC,OAAD,IAAY,OAAO,CAAC,MAAR,KAAmB,CAAnC,EAAsC;MACpC;IACD;;IACD,OAAO,CAAC,OAAR,CAAgB,UAAC,QAAD,EAAS;MACvB,QAAQ;IACT,CAFD;EAGD,CARD;;EASF,OAAA,IAAA;AA5BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string; //null factor\n  age?: number;\n}\n\ntype callback = () => {};\n\nexport class User {\n  events: { [Key: string]: callback[] } = {};\n  constructor(private data: UserProps) {}\n\n  get(propName: string): number | string {\n    return this.data[propName];\n  }\n\n  set(update: UserProps): void {\n    Object.assign(this.data, update);\n  }\n\n  on(eventname: string, callback: callback) {\n    //   this.events[eventname] //callback or undefined\n    const handler = this.events[eventname] || [];\n    handler.push(callback);\n    this.events[eventname] = handler;\n  }\n\n  trigger(eventName: string): void {\n    const handler = this.events[eventName];\n    if (!handler || handler.length === 0) {\n      return;\n    }\n    handler.forEach((callback) => {\n      callback();\n    });\n  }\n}\n","import { User } from './models/User';\n\nconst user = new User({ name: 'abc', age: 12 });\n\nuser.on('change', () => {\n  console.log('change#1');\n});\nuser.on('change', () => {\n  console.log('change #2');\n});\nuser.on('save', () => {\n  console.log('Save');\n});\n\nuser.trigger('change');\n"]}